server:
  port: ${PORT:8081}
  servlet:
    context-path: /

spring:
  application:
    name: fc-orderprocessor
  main:
    web-application-type: servlet
    allow-bean-definition-overriding: true
    lazy-initialization: ${LAMBDA_MODE:false}  # Enable lazy init in Lambda
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
      - org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
  cloud:
    function:
      definition: orderProcessor
      scan:
        packages: com.fc.serverless.orderprocessor
      web:
        export:
          enabled: true
  jackson:
    serialization:
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false

# Remote function URLs for cross-service calls
# Remote function URL
priceCalculator:
  url: ${FC_LAMBDA_URL_PRICECALCULATOR:http://localhost:8082/priceCalculator}

# Option 2: FC Framework configuration (recommended for new projects)
fc:
  functions:
    # Configure specific ports for local development
    userValidator:
      port: 8082
    inventoryChecker:
      port: 8083
    paymentProcessor:
      port: 8084
    # Global configuration
    default:
      port:
        base: 8080  # Base port for auto-generated ports

# Environment detection
environment:
  type: ${ENVIRONMENT_TYPE:local}
  lambda: ${AWS_LAMBDA_FUNCTION_NAME:#{null}}

# Logging
logging:
  level:
    com.fc: ${LOG_LEVEL:DEBUG}
    org.springframework.cloud.function: ${LOG_LEVEL:DEBUG}
    org.springframework.web: WARN
    org.springframework.security: OFF
    root: ${ROOT_LOG_LEVEL:WARN}
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"